################################################################################
#
#   Section: Organizations
#
#   - This section defines the different organizational identities which will
#   be referenced later in the configuration.
#
################################################################################
Organizations:

    - &OrdererOrg
        Name: Orderer
        ID: OrdererMSP
        MSPDir: crypto-config/ordererOrganizations/orderer.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: OR('OrdererMSP.member')
            Writers:
                Type: Signature
                Rule: OR('OrdererMSP.member')
            Admins:
                Type: Signature
                Rule: OR('OrdererMSP.admin')
        
    - &GreenAirline
        Name: GreenAirline
        ID: GreenAirlineMSP
        MSPDir: crypto-config/peerOrganizations/greenairline.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: OR('GreenAirlineMSP.admin', 'GreenAirlineMSP.member', 'GreenAirlineMSP.peer', 'GreenAirlineMSP.client')
            Writers:
                Type: Signature
                Rule: OR('GreenAirlineMSP.admin', 'GreenAirlineMSP.member', 'GreenAirlineMSP.client')
            Admins:
                Type: Signature
                Rule: OR('GreenAirlineMSP.admin')
        AnchorPeers:
            - Host: peer0.greenairline.com
              Port: 7051

    - &BlueAirline
        Name: BlueAirline
        ID: BlueAirlineMSP
        MSPDir: crypto-config/peerOrganizations/blueairline.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: OR('BlueAirlineMSP.admin', 'BlueAirlineMSP.member', 'BlueAirlineMSP.peer', 'BlueAirlineMSP.client' )
            Writers:
                Type: Signature
                Rule: OR('BlueAirlineMSP.admin', 'BlueAirlineMSP.member', 'BlueAirlineMSP.client')
            Admins:
                Type: Signature
                Rule: OR('BlueAirlineMSP.admin')
        AnchorPeers:
            - Host: peer0.blueairline.com
              Port: 7051

    - &GreenAgencies
        Name: GreenAgencies
        ID: GreenAgenciesMSP
        MSPDir: crypto-config/peerOrganizations/greenagencies.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: OR('GreenAgenciesMSP.admin', 'GreenAgenciesMSP.member', 'GreenAgenciesMSP.peer', 'GreenAgenciesMSP.client')
            Writers:
                Type: Signature
                Rule: OR('GreenAgenciesMSP.admin', 'GreenAgenciesMSP.member', 'GreenAgenciesMSP.client')
            Admins:
                Type: Signature
                Rule: OR('GreenAgenciesMSP.admin')
        AnchorPeers:
            - Host: peer0.greenagencies.com
              Port: 7051

    - &BlueAgencies
        Name: BlueAgencies
        ID: BlueAgenciesMSP
        MSPDir: crypto-config/peerOrganizations/blueagencies.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: OR('BlueAgenciesMSP.admin', 'BlueAgenciesMSP.member', 'BlueAgenciesMSP.peer', 'BlueAgenciesMSP.client')
            Writers:
                Type: Signature
                Rule: OR('BlueAgenciesMSP.admin', 'BlueAgenciesMSP.member', 'BlueAgenciesMSP.client')
            Admins:
                Type: Signature
                Rule: OR('BlueAgenciesMSP.admin')
        AnchorPeers:
            - Host: peer0.blueagencies.com
              Port: 7051
 
    - &Bsps
        Name: Bsps
        ID: BspsMSP
        MSPDir: crypto-config/peerOrganizations/bsps.com/msp
        Policies:
            Readers:
                Type: Signature
                Rule: OR('BspsMSP.admin', 'BspsMSP.member', 'BspsMSP.peer', 'BspsMSP.client')
            Writers:
                Type: Signature
                Rule: OR('BspsMSP.admin', 'BspsMSP.member', 'BspsMSP.client')
            Admins:
                Type: Signature
                Rule: OR('BspsMSP.admin')
        AnchorPeers:
            - Host: peer0.bsps.com
              Port: 7051


################################################################################
Capabilities:
    # Channel capabilities apply to both the orderers and the peers and must be
    # supported by both.
    # Set the value of the capability to true to require it.
    Channel: &ChannelCapabilities
        V1_3: true

    # Orderer capabilities apply only to the orderers, and may be safely
    # used with prior release peers.
    # Set the value of the capability to true to require it.
    Orderer: &OrdererCapabilities
        V1_1: true

    # Application capabilities apply only to the peer network, and may be safely
    # used with prior release orderers.
    # Set the value of the capability to true to require it.
    Application: &ApplicationCapabilities
        V1_3: true
        V1_2: false
        V1_1: false


################################################################################
Application: &ApplicationDefaults
    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    Capabilities:
        <<: *ApplicationCapabilities

    # Organizations is the list of orgs which are defined as participants on
    # the application side of the network
    Organizations:
    
##################################################################################
Channel: &ChannelDefaults
    Policies:
        # Who may invoke the 'Deliver' API
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        # Who may invoke the 'Broadcast' API
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        # By default, who may modify elements at this config level
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"

    # Capabilities describes the channel level capabilities, see the
    # dedicated Capabilities section elsewhere in this file for a full
    # description
    Capabilities:
        <<: *ChannelCapabilities


################################################################################
#
#   SECTION: Orderer
#
#   - This section defines the values to encode into a config transaction or
#   genesis block for orderer related parameters
#
################################################################################
Orderer: &OrdererDefaults

    # Orderer Type: The orderer implementation to start
    # Available types are "solo" and "kafka"
    OrdererType: etcdraft

    Addresses:
        - orderer1:7050
        - orderer2:7050
        - orderer3:7050

    # Batch Timeout: The amount of time to wait before creating a batch
    BatchTimeout: 2s

    # Batch Size: Controls the number of messages batched into a block
    BatchSize:

        # Max Message Count: The maximum number of messages to permit in a batch
        MaxMessageCount: 10

        # Absolute Max Bytes: The absolute maximum number of bytes allowed for
        # the serialized messages in a batch.
        AbsoluteMaxBytes: 99 MB

        # Preferred Max Bytes: The preferred maximum number of bytes allowed for
        # the serialized messages in a batch. A message larger than the preferred
        # max bytes will result in a batch larger than preferred max bytes.
        PreferredMaxBytes: 512 KB

    EtcdRaft:
        Consenters:
        - Host: orderer1
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/orderer.com/orderers/orderer1.orderer.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/orderer.com/orderers/orderer1.orderer.com/tls/server.crt
        - Host: orderer2
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/orderer.com/orderers/orderer2.orderer.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/orderer.com/orderers/orderer2.orderer.com/tls/server.crt
        - Host: orderer3
          Port: 7050
          ClientTLSCert: crypto-config/ordererOrganizations/orderer.com/orderers/orderer3.orderer.com/tls/server.crt
          ServerTLSCert: crypto-config/ordererOrganizations/orderer.com/orderers/orderer3.orderer.com/tls/server.crt


        # Options to be specified for all the etcd/raft nodes. The values here
        # are the defaults for all new channels and can be modified on a
        # per-channel basis via configuration updates.
        Options:
            # TickInterval is the time interval between two Node.Tick invocations.
            TickInterval: 500ms

            # ElectionTick is the number of Node.Tick invocations that must pass
            # between elections. That is, if a follower does not receive any
            # message from the leader of current term before ElectionTick has
            # elapsed, it will become candidate and start an election.
            # ElectionTick must be greater than HeartbeatTick.
            ElectionTick: 10

            # HeartbeatTick is the number of Node.Tick invocations that must
            # pass between heartbeats. That is, a leader sends heartbeat
            # messages to maintain its leadership every HeartbeatTick ticks.
            HeartbeatTick: 1

            # MaxInflightBlocks limits the max number of in-flight append messages
            # during optimistic replication phase.
            MaxInflightBlocks: 5

            # SnapshotIntervalSize defines number of bytes per which a snapshot is taken
            SnapshotIntervalSize: 20 MB

    Policies:
        Readers:
            Type: ImplicitMeta
            Rule: "ANY Readers"
        Writers:
            Type: ImplicitMeta
            Rule: "ANY Writers"
        Admins:
            Type: ImplicitMeta
            Rule: "MAJORITY Admins"
        # BlockValidation specifies what signatures must be included in the block
        # from the orderer for the peer to validate it.
        BlockValidation:
            Type: ImplicitMeta
            Rule: "ANY Writers"

    # Organizations is the list of orgs which are defined as participants on
    # the orderer side of the network
    Organizations:
    
##################################################################################
Profiles:

    LocalDev:
        <<: *ChannelDefaults
        Capabilities:
            <<: *ChannelCapabilities
  
        Orderer:
            <<: *OrdererDefaults
            OrdererType: etcdraft

            Organizations:
            - *OrdererOrg
            Capabilities:
                <<: *OrdererCapabilities
 
        Application:
            <<: *ApplicationDefaults
            Organizations:
            - <<: *OrdererOrg
 
        Consortiums:
            BspsConsortium:
                Organizations:
                    - *GreenAirline
                    - *GreenAgencies
                    - *BlueAirline
                    - *BlueAgencies
                    - *Bsps

    GreenChannel:
        Consortium: BspsConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *GreenAirline
                - *GreenAgencies
                - *Bsps

    BlueChannel:
        Consortium: BspsConsortium
        Application:
            <<: *ApplicationDefaults
            Organizations:
                - *BlueAirline
                - *BlueAgencies
                - *Bsps
